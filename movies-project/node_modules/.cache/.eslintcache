[{"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/index.js":"1","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/serviceWorker.js":"2","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/App.jsx":"3","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/moviedetail/MovieDetail.jsx":"4","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/moviedetail/TestPage.jsx":"5","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/home/Home.jsx":"6","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/signup/signup.jsx":"7","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/login/Login.jsx":"8","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/navBar/NavBar.jsx":"9","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/Footer.js":"10","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/service/index.js":"11","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/FooterStyles.js":"12"},{"size":594,"mtime":1649808721830,"results":"13","hashOfConfig":"14"},{"size":5086,"mtime":1649808721831,"results":"15","hashOfConfig":"14"},{"size":894,"mtime":1650064023878,"results":"16","hashOfConfig":"14"},{"size":6457,"mtime":1650064400787,"results":"17","hashOfConfig":"14"},{"size":11828,"mtime":1650064722770,"results":"18","hashOfConfig":"14"},{"size":4736,"mtime":1650065199569,"results":"19","hashOfConfig":"14"},{"size":1978,"mtime":1650064023879,"results":"20","hashOfConfig":"14"},{"size":1800,"mtime":1650064023879,"results":"21","hashOfConfig":"14"},{"size":3348,"mtime":1650064023879,"results":"22","hashOfConfig":"14"},{"size":2382,"mtime":1650064709019,"results":"23","hashOfConfig":"14"},{"size":4414,"mtime":1649808721831,"results":"24","hashOfConfig":"14"},{"size":1562,"mtime":1649818647501,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3icqp1",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/index.js",[],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/serviceWorker.js",[],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/App.jsx",["64"],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/moviedetail/MovieDetail.jsx",[],[],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/moviedetail/TestPage.jsx",["65","66","67"],[],"import './movie.css'\nimport React, { useState, useEffect } from \"react\";\nimport { fetchMovieDetail, fetchMovieVideos, fetchCasts, fetchSimilarMovie } from \"../../service\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\nimport { Modal } from \"react-bootstrap\";\nimport ReactPlayer from \"react-player\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { Link } from 'react-router-dom';\n\nimport Footer from '../Footer';\n\nexport function TestPage({ match }) {\n\n    let params = match.params;\n    let genres = [];\n    const [isOpen, setIsOpen] = useState(false);\n    const [detail, setDetail] = useState([]);\n    const [video, setVideo] = useState([]);\n    const [casts, setCasts] = useState([]);\n    const [similarMovie, setSimilarMovie] = useState([]);\n\n    useEffect(() => {\n        window.scroll(0, 0);\n        const fetchAPI = async () => {\n        setDetail(await fetchMovieDetail(params.id));\n        setVideo(await fetchMovieVideos(params.id));\n        setCasts(await fetchCasts(params.id));\n        setSimilarMovie(await fetchSimilarMovie(params.id));\n        genres = detail.genres;\n        };\n        \n        fetchAPI();\n    }, [params.id]);\n\n    genres = detail.genres;\n\n    if (genres === undefined) {\n        return (\n            <div>\n                Loading\n            </div>\n        )\n    }   \n\n    const MoviePalyerModal = (props) => {\n        const youtubeUrl = \"https://www.youtube.com/watch?v=\";\n        return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n            <Modal.Title\n                id=\"contained-modal-title-vcenter\"\n                style={{ color: \"#000000\", fontWeight: \"bolder\" }}\n            >\n                {detail.title}\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ backgroundColor: \"#000000\" }}>\n            <ReactPlayer\n                className=\"container-fluid\"\n                url={youtubeUrl + video.key}\n                playing\n                width=\"100%\"\n            ></ReactPlayer>\n            </Modal.Body>\n        </Modal>\n        );\n    };\n\n    window.onscroll = function () { myFunction() };\n    function myFunction() {\n        const element = document.getElementsByClassName(\"body\")[0];\n        if (document.documentElement.scrollTop > (element.scrollHeight / 50)) {\n            document.getElementsByClassName(\"scrollEffect\")[0].style.opacity = \"1\";\n            var top = document.documentElement.scrollTop - (element.scrollHeight / 50);\n            document.getElementsByClassName(\"scrollEffect\")[0].style.top = Math.max(0, (200 - top)) + \"px\";\n            \n            console.log(Math.max(0, (200 - (top))));\n        } else {\n            document.getElementsByClassName('scrollEffect')[0].style.opacity = \"0\";\n            document.getElementsByClassName('scrollEffect')[0].style.top = \"200px\";\n        }\n    }\n\n    function getPosterLink(a) {\n        var divStyle = {\n            backgroundImage: 'url(\"https://image.tmdb.org/t/p/original' + a + '\")',\n        };\n        return divStyle;\n    }\n\n    function properFormat(b) { \n        var a = b.toString();\n        var ans = \"\";\n        var count = 0;\n        for (var i = a.length; i > 0; i--) {\n            if (count === 3) {\n                ans = \",\" + ans;\n                count = 0;\n            }\n            ans = a[i - 1] + ans;\n            count++;\n        }\n        return ans;\n    }\n\n    function properTimeFormat(b) {\n        var ans = \"\";\n        var c = parseInt(b / 60)\n        ans = c + \"hr \" + (b % 60) + \"min\";\n        return ans;\n    }\n\n    function run() {\n        setIsOpen(true);\n    }\n\n    return (\n        <div className='body'>\n            <div className='MoviePage image' style={getPosterLink(detail.backdrop_path)}>\n            </div>\n            <div className='arrow' style = {{width: \"100%\"}}>\n                <svg style = {{fontSize: \"2em\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"white\" class=\"bi bi-arrow-down\" viewBox=\"0 0 16 16\">\n                    <path fillRule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\n                </svg>\n            </div>\n            <div className=\"MoviePageInfo d-flex justify-content-center flex-column\" style = {{zIndex: \"2\"}}>\n                <div className = \"mx-5 d-flex flex-column\">\n                    <div className='d-flex flex-row'>\n                        {\n                            genres.map((genre) => {\n                                return (\n                                    <p className='transparentBox px-4 py-2 mr-3 text-white'>{genre.name}</p>\n                                )\n                            })\n                        }\n                    </div>\n                    <MoviePalyerModal show={isOpen}\n                        onHide={() => {\n                            setIsOpen(false);\n                        }}\n                        ></MoviePalyerModal>\n                    <h2 className = \"text-white my-3 display-4\">{detail.title}</h2>\n                    <div className='Rating d-flex flex-row mt-2 align-items-center'>\n                        <div className='ratingBox bg-yellow mr-2'>\n                            <p className=\"text-dark px-2 py-1 font-weight-bold\">IMDb</p>\n                        </div>\n                        <p className='text-white font-weight-bold'>{detail.vote_average}</p>\n                    </div>\n                    <div className = \"d-flex flex-row align-items-center mt-5\">\n                        <div className = \"playButton mr-3 py-2 px-2\" onClick={() => run()}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"black\" className=\"bi bi-play-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z\"/>\n                            </svg>\n                        </div>\n                        <p className = \"learn text-white font-weight-bold\"> Watch Trailer </p>\n                    </div>\n                </div>\n            </div>\n            <div className='px-5 pt-5 details'>\n                <div className = \"scrollEffect\">\n                    <div className='d-flex flex-row'>\n                        <div className = \"imagePoster mr-4 col-2 bg-primary\" style={getPosterLink(detail.poster_path)}>\n                        </div>\n                        <div className='row'>\n                            <div className='col-9'>\n                                <div className='d-flex flex-row'>\n                                    {\n                                        genres.map((genre) => {\n                                            return (\n                                                <p style = {{fontSize: \"0.8em\"}} className='secondBox px-3 py-2 mr-2 text-white'>{genre.name}</p>\n                                            )\n                                        })\n                                    }\n                                </div>\n                                <h2 className = \"learn text-white my-3 display-4 font-weight-light\">{detail.title}</h2>\n                                <div className = \"mt-4 text-secondary col-8\" style={{padding: 0, fontSize: \"1.1em\"}}>\n                                    {detail.overview}\n                                </div>\n                            </div>\n                            <div className = \"text-white mt-2 pt-5\">\n                                <div className = \"mb-4\">\n                                    <p className='learn font-weight-bold '>RELEASE DATE</p>\n                                    <p className='pt-1'>{detail.release_date}</p>\n                                </div>\n                                <div className = \"mb-4\">\n                                    <p className='learn font-weight-bold'>RUN TIME</p>\n                                    <p className='pt-1'>{properTimeFormat(detail.runtime)}</p>\n                                </div>\n                                <div className='mb-4'>\n                                    <p className='learn font-weight-bold'>REVENUE</p>\n                                    <p className='pt-1'>$ {properFormat(detail.revenue)}</p>\n                                </div>\n                                <div>\n                                    <a href = {detail.homepage} target=\"_blank\">\n                                        <p className='font-weight-bold'>WEBSITE LINK</p>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mt-5\">\n                        <p className='mt-5 pt-3 text-white font-weight-light' style = {{fontSize: \"1.8em\"}}>Similar Movies</p>\n                        <div className='d-flex flex-row scroll' style={{width: \"100%\"}}>\n                            {\n                                similarMovie.map((movie) => {\n                                    return (\n                                        <Link to={`/movie/${movie.id}`} className = \"similarbox col-2 mr-4 d-flex flex-column justify-content-center\">\n                                            <div className = \"px-4 text-white display-5 font-weight-bold row\" style = {{height: \"10vh\"}}>\n                                                <div className='col-8 learn d-flex flex-column justify-content-center' style = {{height: \"100%\"}}>\n                                                    <p>{movie.title}</p>\n                                                    <p className='font-weight-light' style={{fontSize: \"0.85em\"}}>Rating : {movie.rating}</p>\n                                                </div>\n                                                <div style={{backgroundImage: \"url('\" + movie.poster + \"')\"}} className='similarPoster col-4 bg-primary'>\n                                                </div>\n                                            </div>\n                                        </Link>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                    <div className=\"mt-5\">\n                        <p className='mt-5 pt-3 text-white font-weight-light' style = {{fontSize: \"1.8em\"}}>Cast</p>\n                        <div className='d-flex flex-row scroll' style={{width: \"100%\"}}>\n                            {\n                                casts.map((cast) => {\n                                    return (\n                                        <div className='box pb-2 px-4 col-2 mr-4 d-flex flex-column justify-content-end' style = {{backgroundImage: \"url('\" + cast.img + \"')\"}}>\n                                            <p className='text-white' style= {{width: \"100%\", fontSize: \"1.7em\"}}>{cast.name}</p>\n                                            <p className='text-white font-weight-bold'>{cast.character}</p>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='footer' style= {{backgroundColor: 'black', height: '225px'}}>\n                <hr style={{borderTop: \"1px solid #5a606b\", marginTop: \"0px\", marginBottom: \"20px\", marginLeft: \"50px\", marginRight: \"50px\"}}></hr>\n                <Footer />\n            </div>\n        </div>\n    );\n}","/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/home/Home.jsx",[],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/signup/signup.jsx",[],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/login/Login.jsx",[],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/navBar/NavBar.jsx",["68"],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/Footer.js",[],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/service/index.js",[],[],"/Users/marknatavio/Desktop/Project/MovieSearchEngine/movies-project/src/components/FooterStyles.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":21},{"ruleId":"69","severity":1,"message":"73","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":29,"column":18,"nodeType":"76","endLine":29,"endColumn":31},{"ruleId":"77","severity":1,"message":"78","line":199,"column":37,"nodeType":"79","messageId":"80","endLine":199,"endColumn":81,"fix":"81"},{"ruleId":"69","severity":1,"message":"82","line":3,"column":27,"nodeType":"71","messageId":"72","endLine":3,"endColumn":36},"no-unused-vars","'MovieDetail' is defined but never used.","Identifier","unusedVar","'ReactStars' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'genres' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"83","text":"84"},"'useEffect' is defined but never used.",[8642,8642]," rel=\"noreferrer\""]