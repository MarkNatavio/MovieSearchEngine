[{"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\index.js":"1","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\serviceWorker.js":"2","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\App.jsx":"3","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\login\\Login.jsx":"4","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\navBar\\NavBar.jsx":"5","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\moviedetail\\TestPage.jsx":"6","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\signup\\signup.jsx":"7","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\home\\Home.jsx":"8","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\moviedetail\\MovieDetail.jsx":"9","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\Footer.js":"10","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\service\\index.js":"11","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\FooterStyles.js":"12","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\service\\authContext.js":"13","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\firebase.js":"14"},{"size":616,"mtime":1650071726822,"results":"15","hashOfConfig":"16"},{"size":5227,"mtime":1650032757764,"results":"17","hashOfConfig":"16"},{"size":1044,"mtime":1650071741183,"results":"18","hashOfConfig":"16"},{"size":2909,"mtime":1650071884512,"results":"19","hashOfConfig":"16"},{"size":3969,"mtime":1650074570171,"results":"20","hashOfConfig":"16"},{"size":12078,"mtime":1650032757751,"results":"21","hashOfConfig":"16"},{"size":3096,"mtime":1650068460121,"results":"22","hashOfConfig":"16"},{"size":4881,"mtime":1650073089968,"results":"23","hashOfConfig":"16"},{"size":6670,"mtime":1650065613794,"results":"24","hashOfConfig":"16"},{"size":2457,"mtime":1650065613791,"results":"25","hashOfConfig":"16"},{"size":4562,"mtime":1650032757763,"results":"26","hashOfConfig":"16"},{"size":1644,"mtime":1650032757743,"results":"27","hashOfConfig":"16"},{"size":2695,"mtime":1650073248105,"results":"28","hashOfConfig":"16"},{"size":706,"mtime":1650066470630,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1atwocg",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\index.js",[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\serviceWorker.js",[],[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\App.jsx",["74"],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\login\\Login.jsx",[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\navBar\\NavBar.jsx",["75"],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\moviedetail\\TestPage.jsx",["76","77","78"],[],"import './movie.css'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { fetchMovieDetail, fetchMovieVideos, fetchCasts, fetchSimilarMovie } from \"../../service\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Footer from '../Footer';\r\n\r\nexport function TestPage({ match }) {\r\n\r\n    let params = match.params;\r\n    let genres = [];\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [detail, setDetail] = useState([]);\r\n    const [video, setVideo] = useState([]);\r\n    const [casts, setCasts] = useState([]);\r\n    const [similarMovie, setSimilarMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0);\r\n        const fetchAPI = async () => {\r\n        setDetail(await fetchMovieDetail(params.id));\r\n        setVideo(await fetchMovieVideos(params.id));\r\n        setCasts(await fetchCasts(params.id));\r\n        setSimilarMovie(await fetchSimilarMovie(params.id));\r\n        genres = detail.genres;\r\n        };\r\n        \r\n        fetchAPI();\r\n    }, [params.id]);\r\n\r\n    genres = detail.genres;\r\n\r\n    if (genres === undefined) {\r\n        return (\r\n            <div>\r\n                Loading\r\n            </div>\r\n        )\r\n    }   \r\n\r\n    const MoviePalyerModal = (props) => {\r\n        const youtubeUrl = \"https://www.youtube.com/watch?v=\";\r\n        return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n            <Modal.Title\r\n                id=\"contained-modal-title-vcenter\"\r\n                style={{ color: \"#000000\", fontWeight: \"bolder\" }}\r\n            >\r\n                {detail.title}\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body style={{ backgroundColor: \"#000000\" }}>\r\n            <ReactPlayer\r\n                className=\"container-fluid\"\r\n                url={youtubeUrl + video.key}\r\n                playing\r\n                width=\"100%\"\r\n            ></ReactPlayer>\r\n            </Modal.Body>\r\n        </Modal>\r\n        );\r\n    };\r\n\r\n    window.onscroll = function () { myFunction() };\r\n    function myFunction() {\r\n        const element = document.getElementsByClassName(\"body\")[0];\r\n        if (document.documentElement.scrollTop > (element.scrollHeight / 50)) {\r\n            document.getElementsByClassName(\"scrollEffect\")[0].style.opacity = \"1\";\r\n            var top = document.documentElement.scrollTop - (element.scrollHeight / 50);\r\n            document.getElementsByClassName(\"scrollEffect\")[0].style.top = Math.max(0, (200 - top)) + \"px\";\r\n            \r\n            console.log(Math.max(0, (200 - (top))));\r\n        } else {\r\n            document.getElementsByClassName('scrollEffect')[0].style.opacity = \"0\";\r\n            document.getElementsByClassName('scrollEffect')[0].style.top = \"200px\";\r\n        }\r\n    }\r\n\r\n    function getPosterLink(a) {\r\n        var divStyle = {\r\n            backgroundImage: 'url(\"https://image.tmdb.org/t/p/original' + a + '\")',\r\n        };\r\n        return divStyle;\r\n    }\r\n\r\n    function properFormat(b) { \r\n        var a = b.toString();\r\n        var ans = \"\";\r\n        var count = 0;\r\n        for (var i = a.length; i > 0; i--) {\r\n            if (count === 3) {\r\n                ans = \",\" + ans;\r\n                count = 0;\r\n            }\r\n            ans = a[i - 1] + ans;\r\n            count++;\r\n        }\r\n        return ans;\r\n    }\r\n\r\n    function properTimeFormat(b) {\r\n        var ans = \"\";\r\n        var c = parseInt(b / 60)\r\n        ans = c + \"hr \" + (b % 60) + \"min\";\r\n        return ans;\r\n    }\r\n\r\n    function run() {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className='body'>\r\n            <div className='MoviePage image' style={getPosterLink(detail.backdrop_path)}>\r\n            </div>\r\n            <div className='arrow' style = {{width: \"100%\"}}>\r\n                <svg style = {{fontSize: \"2em\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" fill=\"white\" class=\"bi bi-arrow-down\" viewBox=\"0 0 16 16\">\r\n                    <path fillRule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\r\n                </svg>\r\n            </div>\r\n            <div className=\"MoviePageInfo d-flex justify-content-center flex-column\" style = {{zIndex: \"2\"}}>\r\n                <div className = \"mx-5 d-flex flex-column\">\r\n                    <div className='d-flex flex-row'>\r\n                        {\r\n                            genres.map((genre) => {\r\n                                return (\r\n                                    <p className='transparentBox px-4 py-2 mr-3 text-white'>{genre.name}</p>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <MoviePalyerModal show={isOpen}\r\n                        onHide={() => {\r\n                            setIsOpen(false);\r\n                        }}\r\n                        ></MoviePalyerModal>\r\n                    <h2 className = \"text-white my-3 display-4\">{detail.title}</h2>\r\n                    <div className='Rating d-flex flex-row mt-2 align-items-center'>\r\n                        <div className='ratingBox bg-yellow mr-2'>\r\n                            <p className=\"text-dark px-2 py-1 font-weight-bold\">IMDb</p>\r\n                        </div>\r\n                        <p className='text-white font-weight-bold'>{detail.vote_average}</p>\r\n                    </div>\r\n                    <div className = \"d-flex flex-row align-items-center mt-5\">\r\n                        <div className = \"playButton mr-3 py-2 px-2\" onClick={() => run()}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"black\" className=\"bi bi-play-fill\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z\"/>\r\n                            </svg>\r\n                        </div>\r\n                        <p className = \"learn text-white font-weight-bold\"> Watch Trailer </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='px-5 pt-5 details'>\r\n                <div className = \"scrollEffect\">\r\n                    <div className='d-flex flex-row'>\r\n                        <div className = \"imagePoster mr-4 col-2 bg-primary\" style={getPosterLink(detail.poster_path)}>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-9'>\r\n                                <div className='d-flex flex-row'>\r\n                                    {\r\n                                        genres.map((genre) => {\r\n                                            return (\r\n                                                <p style = {{fontSize: \"0.8em\"}} className='secondBox px-3 py-2 mr-2 text-white'>{genre.name}</p>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <h2 className = \"learn text-white my-3 display-4 font-weight-light\">{detail.title}</h2>\r\n                                <div className = \"mt-4 text-secondary col-8\" style={{padding: 0, fontSize: \"1.1em\"}}>\r\n                                    {detail.overview}\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"text-white mt-2 pt-5\">\r\n                                <div className = \"mb-4\">\r\n                                    <p className='learn font-weight-bold '>RELEASE DATE</p>\r\n                                    <p className='pt-1'>{detail.release_date}</p>\r\n                                </div>\r\n                                <div className = \"mb-4\">\r\n                                    <p className='learn font-weight-bold'>RUN TIME</p>\r\n                                    <p className='pt-1'>{properTimeFormat(detail.runtime)}</p>\r\n                                </div>\r\n                                <div className='mb-4'>\r\n                                    <p className='learn font-weight-bold'>REVENUE</p>\r\n                                    <p className='pt-1'>$ {properFormat(detail.revenue)}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <a href = {detail.homepage} target=\"_blank\">\r\n                                        <p className='font-weight-bold'>WEBSITE LINK</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-5\">\r\n                        <p className='mt-5 pt-3 text-white font-weight-light' style = {{fontSize: \"1.8em\"}}>Similar Movies</p>\r\n                        <div className='d-flex flex-row scroll' style={{width: \"100%\"}}>\r\n                            {\r\n                                similarMovie.map((movie) => {\r\n                                    return (\r\n                                        <Link to={`/movie/${movie.id}`} className = \"similarbox col-2 mr-4 d-flex flex-column justify-content-center\">\r\n                                            <div className = \"px-4 text-white display-5 font-weight-bold row\" style = {{height: \"10vh\"}}>\r\n                                                <div className='col-8 learn d-flex flex-column justify-content-center' style = {{height: \"100%\"}}>\r\n                                                    <p>{movie.title}</p>\r\n                                                    <p className='font-weight-light' style={{fontSize: \"0.85em\"}}>Rating : {movie.rating}</p>\r\n                                                </div>\r\n                                                <div style={{backgroundImage: \"url('\" + movie.poster + \"')\"}} className='similarPoster col-4 bg-primary'>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-5\">\r\n                        <p className='mt-5 pt-3 text-white font-weight-light' style = {{fontSize: \"1.8em\"}}>Cast</p>\r\n                        <div className='d-flex flex-row scroll' style={{width: \"100%\"}}>\r\n                            {\r\n                                casts.map((cast) => {\r\n                                    return (\r\n                                        <div className='box pb-2 px-4 col-2 mr-4 d-flex flex-column justify-content-end' style = {{backgroundImage: \"url('\" + cast.img + \"')\"}}>\r\n                                            <p className='text-white' style= {{width: \"100%\", fontSize: \"1.7em\"}}>{cast.name}</p>\r\n                                            <p className='text-white font-weight-bold'>{cast.character}</p>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='footer' style= {{backgroundColor: 'black', height: '225px'}}>\r\n                <hr style={{borderTop: \"1px solid #5a606b\", marginTop: \"0px\", marginBottom: \"20px\", marginLeft: \"50px\", marginRight: \"50px\"}}></hr>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\signup\\signup.jsx",[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\home\\Home.jsx",[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\moviedetail\\MovieDetail.jsx",[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\Footer.js",[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\service\\index.js",[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\components\\FooterStyles.js",[],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\service\\authContext.js",["79","80","81"],[],"C:\\Users\\nisha\\Desktop\\MovieSearchEngine\\movies-project\\src\\firebase.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":5,"column":10,"nodeType":"84","messageId":"85","endLine":5,"endColumn":21},{"ruleId":"82","severity":1,"message":"86","line":3,"column":27,"nodeType":"84","messageId":"85","endLine":3,"endColumn":36},{"ruleId":"82","severity":1,"message":"87","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":29,"column":18,"nodeType":"90","endLine":29,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":199,"column":37,"nodeType":"93","messageId":"94","endLine":199,"endColumn":81,"fix":"95"},{"ruleId":"82","severity":1,"message":"96","line":5,"column":5,"nodeType":"84","messageId":"85","endLine":5,"endColumn":23},{"ruleId":"82","severity":1,"message":"97","line":20,"column":12,"nodeType":"84","messageId":"85","endLine":20,"endColumn":23},{"ruleId":"82","severity":1,"message":"98","line":53,"column":15,"nodeType":"84","messageId":"85","endLine":53,"endColumn":19},"no-unused-vars","'MovieDetail' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ReactStars' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'genres' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"99","text":"100"},"'onAuthStateChanged' is defined but never used.","'currentUser' is assigned a value but never used.","'info' is assigned a value but never used.",[8840,8840]," rel=\"noreferrer\""]