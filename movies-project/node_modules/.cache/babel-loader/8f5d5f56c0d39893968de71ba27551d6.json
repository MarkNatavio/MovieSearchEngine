{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\Desktop\\\\MovieSearchEngine\\\\movies-project\\\\src\\\\service\\\\authContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { auth, db } from \"../firebase\";\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport { onAuthStateChanged, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { setDoc, doc } from \"firebase/firestore\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n\n  async function addusertoDB(name, email, userId) {\n    await setDoc(doc(db, 'Users', userId), {\n      name: name,\n      email: email,\n      userId: userId\n    });\n  }\n\n  async function signUp(name, email, password) {\n    const ret = await createUserWithEmailAndPassword(auth, email, password).then(useCredential => {\n      let ret1 = useCredential.user.uid;\n      addusertoDB(name, email, ret1);\n      return 1;\n    }).catch(error => {\n      return error;\n    });\n    return ret;\n  }\n\n  async function login(email, password) {\n    const ret = await signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      console.log(userCredential.user.uid);\n      return 1;\n    }).catch(error => {\n      return error;\n    });\n    return ret;\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      console.log(\"User : \", user);\n\n      if (user != null) {\n        console.log(\"User is signed in\");\n      } else {\n        console.log(\"No signed in user\");\n      }\n    });\n  }, []);\n  const value = {\n    signUp,\n    login\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, children);\n}\n\n_s2(AuthProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/nisha/Desktop/MovieSearchEngine/movies-project/src/service/authContext.js"],"names":["auth","db","React","useContext","useEffect","useReducer","onAuthStateChanged","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","setDoc","doc","AuthContext","createContext","useAuth","AuthProvider","children","addusertoDB","name","email","userId","signUp","password","ret","then","useCredential","ret1","user","uid","catch","error","login","userCredential","console","log","value"],"mappings":";;;;AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,aAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,SACIC,kBADJ,EAEIC,OAFJ,EAGIC,8BAHJ,EAIIC,0BAJJ,QAKO,eALP;AAMA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,oBAA5B;AAEA,MAAMC,WAAW,gBAAGV,KAAK,CAACW,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAOX,UAAU,CAACS,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;;AAEvC,iBAAeC,WAAf,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgD;AAC5C,UAAMV,MAAM,CAACC,GAAG,CAACV,EAAD,EAAK,OAAL,EAAcmB,MAAd,CAAJ,EAA2B;AACnCF,MAAAA,IAAI,EAAEA,IAD6B;AAEnCC,MAAAA,KAAK,EAAEA,KAF4B;AAGnCC,MAAAA,MAAM,EAAEA;AAH2B,KAA3B,CAAZ;AAKH;;AAED,iBAAeC,MAAf,CAAsBH,IAAtB,EAA4BC,KAA5B,EAAmCG,QAAnC,EAA6C;AACzC,UAAMC,GAAG,GAAG,MAAMf,8BAA8B,CAACR,IAAD,EAAOmB,KAAP,EAAcG,QAAd,CAA9B,CACbE,IADa,CACPC,aAAD,IAAmB;AACrB,UAAIC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAA9B;AACAX,MAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAcO,IAAd,CAAX;AACA,aAAO,CAAP;AACH,KALa,EAMbG,KANa,CAMNC,KAAD,IAAW;AACd,aAAOA,KAAP;AACH,KARa,CAAlB;AASA,WAAOP,GAAP;AACH;;AAED,iBAAeQ,KAAf,CAAqBZ,KAArB,EAA4BG,QAA5B,EAAsC;AAClC,UAAMC,GAAG,GAAG,MAAMd,0BAA0B,CAACT,IAAD,EAAOmB,KAAP,EAAcG,QAAd,CAA1B,CACbE,IADa,CACPQ,cAAD,IAAoB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAc,CAACL,IAAf,CAAoBC,GAAhC;AACA,aAAO,CAAP;AACH,KAJa,EAKbC,KALa,CAKNC,KAAD,IAAW;AACd,aAAOA,KAAP;AACH,KAPa,CAAlB;AAQA,WAAOP,GAAP;AACH;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACZJ,IAAAA,IAAI,CAACM,kBAAL,CAAwBqB,IAAI,IAAI;AAC5BM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,IAAvB;;AACA,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdM,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,OAFD,MAEO;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,KAPD;AAQH,GATQ,EASN,EATM,CAAT;AAWA,QAAMC,KAAK,GAAG;AACVd,IAAAA,MADU;AAEVU,IAAAA;AAFU,GAAd;AAKA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,QADL,CADJ;AAKH;;IAxDeD,Y;;KAAAA,Y","sourcesContent":["\r\nimport { auth, db } from \"../firebase\";\r\nimport React, { useContext, useEffect, useReducer } from \"react\";\r\nimport {\r\n    onAuthStateChanged,\r\n    signOut,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    async function addusertoDB(name, email, userId) {\r\n        await setDoc(doc(db, 'Users', userId), {\r\n            name: name,\r\n            email: email,\r\n            userId: userId,\r\n        });\r\n    }\r\n\r\n    async function signUp(name, email, password) {\r\n        const ret = await createUserWithEmailAndPassword(auth, email, password)\r\n            .then((useCredential) => {\r\n                let ret1 = useCredential.user.uid;\r\n                addusertoDB(name, email, ret1);\r\n                return 1;\r\n            })\r\n            .catch((error) => {\r\n                return error;\r\n            });\r\n        return ret;\r\n    }\r\n\r\n    async function login(email, password) {\r\n        const ret = await signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                console.log(userCredential.user.uid);\r\n                return 1;\r\n            })\r\n            .catch((error) => {\r\n                return error;\r\n            });\r\n        return ret;\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            console.log(\"User : \", user);\r\n            if (user != null) {\r\n                console.log(\"User is signed in\");\r\n            } else {\r\n                console.log(\"No signed in user\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const value = {\r\n        signUp,\r\n        login\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}