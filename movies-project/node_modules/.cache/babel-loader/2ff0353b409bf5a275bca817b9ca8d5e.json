{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\Desktop\\\\MovieSearchEngine\\\\movies-project\\\\src\\\\service\\\\authContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { auth, db } from \"../firebase\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { setDoc, doc, onSnapshot, updateDoc } from \"firebase/firestore\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [userFavorites, setUserFavorites] = useState([]);\n  const [userId, setUserId] = useState('');\n\n  async function addusertoDB(name, email, userId) {\n    await setDoc(doc(db, 'Users', userId), {\n      name: name,\n      email: email,\n      userId: userId,\n      favorites: []\n    });\n  }\n\n  async function signUp(name, email, password) {\n    const ret = await createUserWithEmailAndPassword(auth, email, password).then(useCredential => {\n      let ret1 = useCredential.user.uid;\n      addusertoDB(name, email, ret1);\n      return 1;\n    }).catch(error => {\n      return error;\n    });\n    return ret;\n  }\n\n  async function handleLogout() {\n    await signOut(auth);\n    setCurrentUser(null);\n    setLoggedIn(false);\n    setUserName('');\n    setUserId('');\n    setUserFavorites([]);\n  }\n\n  async function getUserData(id) {\n    const info = await onSnapshot(doc(db, 'Users', id), doc => {\n      setUserName(doc.data().name);\n      setUserFavorites(doc.data().favorites);\n      console.log(\"User Data :\", doc.data());\n    });\n  }\n\n  async function login(email, password) {\n    const ret = await signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      console.log(userCredential.user.uid);\n      return 1;\n    }).catch(error => {\n      return error;\n    });\n    return ret;\n  }\n\n  async function addToFavorites(movieID) {\n    const washingtonRef = doc(db, \"Users\", userId);\n    userFavorites.push(movieID);\n    await updateDoc(washingtonRef, {\n      favorites: userFavorites\n    });\n  }\n\n  async function deleteFromFavorites(movieID) {\n    var a = userFavorites;\n    const index = a.indexOf(movieID);\n\n    if (index > -1) {\n      a.splice(index, 1);\n    }\n\n    const washingtonRef = doc(db, \"Users\", userId);\n    await updateDoc(washingtonRef, {\n      favorites: a\n    });\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      console.log(\"User : \", user);\n\n      if (user != null) {\n        setCurrentUser(user);\n        setLoggedIn(true);\n        setUserId(user.uid);\n        getUserData(user.uid);\n      } else {\n        setUserId('');\n        setCurrentUser(null);\n        setLoggedIn(false);\n      }\n    });\n  }, []);\n  const value = {\n    signUp,\n    login,\n    loggedIn,\n    userName,\n    handleLogout,\n    addToFavorites,\n    userFavorites,\n    deleteFromFavorites\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, children);\n}\n\n_s2(AuthProvider, \"EFjmnDCJbY0EasEtdcdBGEEL5to=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/nisha/Desktop/MovieSearchEngine/movies-project/src/service/authContext.js"],"names":["auth","db","React","useContext","useEffect","useState","onAuthStateChanged","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","setDoc","doc","onSnapshot","updateDoc","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loggedIn","setLoggedIn","userName","setUserName","userFavorites","setUserFavorites","userId","setUserId","addusertoDB","name","email","favorites","signUp","password","ret","then","useCredential","ret1","user","uid","catch","error","handleLogout","getUserData","id","info","data","console","log","login","userCredential","addToFavorites","movieID","washingtonRef","push","deleteFromFavorites","a","index","indexOf","splice","value"],"mappings":";;;;AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,aAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SACIC,kBADJ,EAEIC,OAFJ,EAGIC,8BAHJ,EAIIC,0BAJJ,QAKO,eALP;AAMA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,oBAAnD;AAEA,MAAMC,WAAW,gBAAGZ,KAAK,CAACa,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAOb,UAAU,CAACW,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;;AAEA,iBAAewB,WAAf,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCJ,MAAxC,EAAgD;AAC5C,UAAMjB,MAAM,CAACC,GAAG,CAACV,EAAD,EAAK,OAAL,EAAc0B,MAAd,CAAJ,EAA2B;AACnCG,MAAAA,IAAI,EAAEA,IAD6B;AAEnCC,MAAAA,KAAK,EAAEA,KAF4B;AAGnCJ,MAAAA,MAAM,EAAEA,MAH2B;AAInCK,MAAAA,SAAS,EAAE;AAJwB,KAA3B,CAAZ;AAMH;;AAED,iBAAeC,MAAf,CAAsBH,IAAtB,EAA4BC,KAA5B,EAAmCG,QAAnC,EAA6C;AACzC,UAAMC,GAAG,GAAG,MAAM3B,8BAA8B,CAACR,IAAD,EAAO+B,KAAP,EAAcG,QAAd,CAA9B,CACbE,IADa,CACPC,aAAD,IAAmB;AACrB,UAAIC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAA9B;AACAX,MAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAcO,IAAd,CAAX;AACA,aAAO,CAAP;AACH,KALa,EAMbG,KANa,CAMNC,KAAD,IAAW;AACd,aAAOA,KAAP;AACH,KARa,CAAlB;AASA,WAAOP,GAAP;AACH;;AAED,iBAAeQ,YAAf,GAA8B;AAC1B,UAAMpC,OAAO,CAACP,IAAD,CAAb;AACAoB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH;;AAED,iBAAekB,WAAf,CAA2BC,EAA3B,EAA+B;AAC3B,UAAMC,IAAI,GAAG,MAAMlC,UAAU,CAACD,GAAG,CAACV,EAAD,EAAK,OAAL,EAAc4C,EAAd,CAAJ,EAAwBlC,GAAD,IAAS;AACzDa,MAAAA,WAAW,CAACb,GAAG,CAACoC,IAAJ,GAAWjB,IAAZ,CAAX;AACAJ,MAAAA,gBAAgB,CAACf,GAAG,CAACoC,IAAJ,GAAWf,SAAZ,CAAhB;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BtC,GAAG,CAACoC,IAAJ,EAA3B;AACH,KAJ4B,CAA7B;AAKH;;AAED,iBAAeG,KAAf,CAAqBnB,KAArB,EAA4BG,QAA5B,EAAsC;AAClC,UAAMC,GAAG,GAAG,MAAM1B,0BAA0B,CAACT,IAAD,EAAO+B,KAAP,EAAcG,QAAd,CAA1B,CACbE,IADa,CACPe,cAAD,IAAoB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,cAAc,CAACZ,IAAf,CAAoBC,GAAhC;AACA,aAAO,CAAP;AACH,KAJa,EAKbC,KALa,CAKNC,KAAD,IAAW;AACd,aAAOA,KAAP;AACH,KAPa,CAAlB;AAQA,WAAOP,GAAP;AACH;;AAED,iBAAeiB,cAAf,CAA8BC,OAA9B,EAAuC;AACnC,UAAMC,aAAa,GAAG3C,GAAG,CAACV,EAAD,EAAK,OAAL,EAAc0B,MAAd,CAAzB;AACAF,IAAAA,aAAa,CAAC8B,IAAd,CAAmBF,OAAnB;AACA,UAAMxC,SAAS,CAACyC,aAAD,EAAgB;AAC3BtB,MAAAA,SAAS,EAAEP;AADgB,KAAhB,CAAf;AAGH;;AAED,iBAAe+B,mBAAf,CAAmCH,OAAnC,EAA4C;AACxC,QAAII,CAAC,GAAGhC,aAAR;AACA,UAAMiC,KAAK,GAAGD,CAAC,CAACE,OAAF,CAAUN,OAAV,CAAd;;AAEA,QAAIK,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZD,MAAAA,CAAC,CAACG,MAAF,CAASF,KAAT,EAAgB,CAAhB;AACH;;AACD,UAAMJ,aAAa,GAAG3C,GAAG,CAACV,EAAD,EAAK,OAAL,EAAc0B,MAAd,CAAzB;AACA,UAAMd,SAAS,CAACyC,aAAD,EAAgB;AAC3BtB,MAAAA,SAAS,EAAEyB;AADgB,KAAhB,CAAf;AAGH;;AAEDrD,EAAAA,SAAS,CAAC,MAAM;AACZJ,IAAAA,IAAI,CAACM,kBAAL,CAAwBiC,IAAI,IAAI;AAC5BS,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,IAAvB;;AACA,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdnB,QAAAA,cAAc,CAACmB,IAAD,CAAd;AACAjB,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,QAAAA,SAAS,CAACW,IAAI,CAACC,GAAN,CAAT;AACAI,QAAAA,WAAW,CAACL,IAAI,CAACC,GAAN,CAAX;AACH,OALD,MAKO;AACHZ,QAAAA,SAAS,CAAC,EAAD,CAAT;AACAR,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,KAZD;AAaH,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAMuC,KAAK,GAAG;AACV5B,IAAAA,MADU;AAEViB,IAAAA,KAFU;AAGV7B,IAAAA,QAHU;AAIVE,IAAAA,QAJU;AAKVoB,IAAAA,YALU;AAMVS,IAAAA,cANU;AAOV3B,IAAAA,aAPU;AAQV+B,IAAAA;AARU,GAAd;AAWA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK3C,QADL,CADJ;AAKH;;IAhHeD,Y;;KAAAA,Y","sourcesContent":["\r\nimport { auth, db } from \"../firebase\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    onAuthStateChanged,\r\n    signOut,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\nimport { setDoc, doc, onSnapshot, updateDoc } from \"firebase/firestore\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const [userFavorites, setUserFavorites] = useState([]);\r\n    const [userId, setUserId] = useState('');\r\n\r\n    async function addusertoDB(name, email, userId) {\r\n        await setDoc(doc(db, 'Users', userId), {\r\n            name: name,\r\n            email: email,\r\n            userId: userId,\r\n            favorites: [],\r\n        });\r\n    }\r\n\r\n    async function signUp(name, email, password) {\r\n        const ret = await createUserWithEmailAndPassword(auth, email, password)\r\n            .then((useCredential) => {\r\n                let ret1 = useCredential.user.uid;\r\n                addusertoDB(name, email, ret1);\r\n                return 1;\r\n            })\r\n            .catch((error) => {\r\n                return error;\r\n            });\r\n        return ret;\r\n    }\r\n\r\n    async function handleLogout() {\r\n        await signOut(auth);\r\n        setCurrentUser(null);\r\n        setLoggedIn(false);\r\n        setUserName('');\r\n        setUserId('');\r\n        setUserFavorites([]);\r\n    }\r\n\r\n    async function getUserData(id) {\r\n        const info = await onSnapshot(doc(db, 'Users', id), (doc) => {\r\n            setUserName(doc.data().name);\r\n            setUserFavorites(doc.data().favorites);\r\n            console.log(\"User Data :\", doc.data());\r\n        });\r\n    }\r\n\r\n    async function login(email, password) {\r\n        const ret = await signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                console.log(userCredential.user.uid);\r\n                return 1;\r\n            })\r\n            .catch((error) => {\r\n                return error;\r\n            });\r\n        return ret;\r\n    }\r\n\r\n    async function addToFavorites(movieID) {\r\n        const washingtonRef = doc(db, \"Users\", userId);\r\n        userFavorites.push(movieID);\r\n        await updateDoc(washingtonRef, {\r\n            favorites: userFavorites\r\n        })\r\n    }\r\n\r\n    async function deleteFromFavorites(movieID) {\r\n        var a = userFavorites;\r\n        const index = a.indexOf(movieID);\r\n\r\n        if (index > -1) {\r\n            a.splice(index, 1);\r\n        }\r\n        const washingtonRef = doc(db, \"Users\", userId);\r\n        await updateDoc(washingtonRef, {\r\n            favorites: a\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            console.log(\"User : \", user);\r\n            if (user != null) {\r\n                setCurrentUser(user);\r\n                setLoggedIn(true);\r\n                setUserId(user.uid);\r\n                getUserData(user.uid);\r\n            } else {\r\n                setUserId('');\r\n                setCurrentUser(null);\r\n                setLoggedIn(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const value = {\r\n        signUp,\r\n        login,\r\n        loggedIn,\r\n        userName,\r\n        handleLogout,\r\n        addToFavorites,\r\n        userFavorites,\r\n        deleteFromFavorites\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}