{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\Desktop\\\\MovieSearchEngine\\\\movies-project\\\\src\\\\components\\\\home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { fetchGenre, fetchMovieByGenre, movieSearch } from \"../../service/index\";\nimport Footer from '../Footer';\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\nimport { Link } from \"react-router-dom\";\nimport './home.css';\nexport function Home() {\n  _s();\n\n  let inputText = '';\n  const [genres, setGenres] = useState([]);\n  const [movieByGenre, setMovieByGenre] = useState([]);\n  const [movieTitle, setSearchTitle] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setGenres(await fetchGenre());\n      setMovieByGenre(await fetchMovieByGenre(0));\n      setSearchTitle(await movieSearch(\"$\"));\n    };\n\n    fetchAPI();\n  }, []); // Searching movies of specific genre\n\n  const handleGenreClick = async genre_id => {\n    setMovieByGenre(await fetchMovieByGenre(genre_id));\n    setSearchTitle(await movieSearch(\"$\"));\n    setSelectedGenre(genre_id);\n  }; // Searching movies based on keyword\n\n\n  const handleMovieSearch = async () => {\n    if (inputText.length >= 1) {\n      setSearchTitle(await movieSearch(inputText));\n      setMovieByGenre(await fetchMovieByGenre(0));\n    }\n  };\n\n  const handleNewKeyword = event => {\n    inputText = event.target.value;\n  };\n\n  const moviesSearched = movieTitle.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-sm-6 mb-4\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/movie/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid image-poster\",\n      src: item.poster,\n      alt: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"okay\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"okay\",\n      style: {\n        fontSize: \"0.9rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Rated: \", item.rating))))));\n  });\n\n  function handle(e) {\n    if (e.key === \"Enter\") {\n      alert(\"Enter was just pressed.\");\n    }\n\n    return false;\n  }\n\n  const genreList = genres.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-inline-item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, selectedGenre !== item.id && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      style: {\n        color: 'white',\n        fontWeight: \"300\",\n        border: \"none\"\n      },\n      className: \"btn btn-outline-info\",\n      onClick: () => {\n        handleGenreClick(item.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, item.name), selectedGenre === item.id && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      style: {\n        color: 'white',\n        fontWeight: \"300\",\n        border: \"none\",\n        backgroundColor: \"#3A3A3A\"\n      },\n      className: \"btn btn-outline-info\",\n      onClick: () => {\n        handleGenreClick(item.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, item.name));\n  });\n  const movieList = movieByGenre.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-sm-6 mb-4\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/movie/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid image-poster\",\n      src: item.poster,\n      alt: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"okay\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"okay\",\n      style: {\n        fontSize: \"0.9rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Rated: \", item.rating))))));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mainContainer mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-5 searchbar col-12\",\n    style: {\n      height: \"37px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-search mr-2 font-weight-bold search\",\n    onClick: handleMovieSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onkeypress: handle,\n    className: \"ml-1 learn info\",\n    id: \"myInput\",\n    style: {\n      fontSize: \"0.85em\",\n      overflow: \"overlay\",\n      width: \"90%\"\n    },\n    placeholder: \"Search\",\n    onChange: handleNewKeyword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, genreList))), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: 'white'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, moviesSearched), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, movieList, \" \")));\n}\n\n_s(Home, \"vvAQk9F0RKC41rGfYR5HiqnAPfk=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/nisha/Desktop/MovieSearchEngine/movies-project/src/components/home/Home.jsx"],"names":["React","useState","useEffect","fetchGenre","fetchMovieByGenre","movieSearch","Footer","Link","Home","inputText","genres","setGenres","movieByGenre","setMovieByGenre","movieTitle","setSearchTitle","selectedGenre","setSelectedGenre","fetchAPI","handleGenreClick","genre_id","handleMovieSearch","length","handleNewKeyword","event","target","value","moviesSearched","map","item","index","id","position","poster","title","fontWeight","fontSize","rating","handle","e","key","alert","genreList","color","border","name","backgroundColor","movieList","height","overflow","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchGenre, fetchMovieByGenre, movieSearch } from \"../../service/index\";\r\nimport Footer from '../Footer'\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './home.css'\r\n\r\nexport function Home() {\r\n\r\n  let inputText = '';\r\n\r\n  const [genres, setGenres] = useState([]);\r\n  const [movieByGenre, setMovieByGenre] = useState([]);\r\n  const [movieTitle, setSearchTitle] = useState([]);\r\n\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setGenres(await fetchGenre());\r\n      setMovieByGenre(await fetchMovieByGenre(0));\r\n      setSearchTitle(await movieSearch(\"$\"));\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  // Searching movies of specific genre\r\n  const handleGenreClick = async (genre_id) => {\r\n    setMovieByGenre(await fetchMovieByGenre(genre_id));\r\n    setSearchTitle(await movieSearch(\"$\"));\r\n    setSelectedGenre(genre_id);\r\n  };\r\n\r\n  // Searching movies based on keyword\r\n  const handleMovieSearch = async () => {\r\n    if (inputText.length >= 1){\r\n      setSearchTitle(await movieSearch(inputText));\r\n      setMovieByGenre(await fetchMovieByGenre(0));\r\n    }\r\n  }\r\n\r\n  const handleNewKeyword = (event) => {\r\n    inputText = event.target.value;\r\n  }\r\n  \r\n  const moviesSearched = movieTitle.map((item, index) => {\r\n    return (\r\n      <div className=\"col-md-3 col-sm-6 mb-4\" key={index}>\r\n        <Link to={`/movie/${item.id}`}>\r\n          <div  style={{position: \"relative\"}}>\r\n            <img className=\"img-fluid image-poster\" src={item.poster} alt={item.title}></img>\r\n            <div className=\"movieData\">\r\n              <div>\r\n                <p className=\"okay\" style={{ fontWeight: \"500\"}}>{item.title}</p>\r\n                <p className=\"okay\" style = {{fontSize: \"0.9rem\"}}>Rated: {item.rating}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  function handle(e){\r\n    if(e.key === \"Enter\"){\r\n        alert(\"Enter was just pressed.\");\r\n    }\r\n    return false;\r\n  } \r\n\r\n  const genreList = genres.map((item, index) => {\r\n    return (\r\n      <li className=\"list-inline-item\" key={index}>\r\n        {(selectedGenre !== item.id) &&\r\n          <button\r\n            type=\"button\"\r\n            style={{color:'white', fontWeight: \"300\", border: \"none\"}}\r\n            className=\"btn btn-outline-info\"\r\n            onClick={() => {\r\n              handleGenreClick(item.id);\r\n            }}\r\n          >\r\n            {item.name}\r\n          </button>\r\n        }\r\n        {\r\n          (selectedGenre === item.id) &&\r\n          <button\r\n            type=\"button\"\r\n            style={{color:'white', fontWeight: \"300\", border: \"none\", backgroundColor: \"#3A3A3A\"}}\r\n            className=\"btn btn-outline-info\"\r\n            onClick={() => {\r\n              handleGenreClick(item.id);\r\n            }}\r\n          >\r\n            {item.name}\r\n          </button>\r\n        }\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const movieList = movieByGenre.map((item, index) => {\r\n    return (\r\n      <div className=\"col-md-3 col-sm-6 mb-4\" key={index}>\r\n        <Link to={`/movie/${item.id}`}>\r\n          <div  style={{position: \"relative\"}}>\r\n            <img className=\"img-fluid image-poster\" src={item.poster} alt={item.title}></img>\r\n            <div className=\"movieData\">\r\n              <div>\r\n                <p className=\"okay\" style={{ fontWeight: \"500\"}}>{item.title}</p>\r\n                <p className=\"okay\" style = {{fontSize: \"0.9rem\"}}>Rated: {item.rating}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <div className=\"container mainContainer mt-5\">\r\n        <div className='mr-5 searchbar col-12' style={{height: \"37px\"}}>\r\n          <i className=\"bi bi-search mr-2 font-weight-bold search\" onClick={ handleMovieSearch } />\r\n          <input type='text' onkeypress={handle} className='ml-1 learn info' id = \"myInput\" style={{fontSize: \"0.85em\", overflow: \"overlay\", width: \"90%\"}} placeholder='Search' onChange={handleNewKeyword}/>\r\n        </div>\r\n\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col mt-3\">\r\n            <ul className=\"list-inline\">{genreList}</ul>\r\n          </div>\r\n        </div>\r\n\r\n        <h3 style={{color: 'white'}} className = \"mt-5\">{\"Movies\"}</h3>\r\n\r\n        <div className=\"row mt-3\">{moviesSearched}</div>\r\n        <div className=\"row mt-3\">{movieList} </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}