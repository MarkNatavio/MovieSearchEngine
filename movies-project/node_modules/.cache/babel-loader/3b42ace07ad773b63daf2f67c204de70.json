{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\Desktop\\\\MovieSearchEngine\\\\movies-project\\\\src\\\\service\\\\authContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { auth, db } from \"../firebase\";\nimport React, { useContext, useEffect } from \"react\";\nimport { onAuthStateChanged, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        db.collection(\"users\").doc(user.uid).get().then(doc => {\n          if (!doc.exists) {\n            db.collection(\"users\").doc(user.uid).set({\n              email: user.email,\n              name: user.displayName,\n              photoURL: user.photoURL,\n              uid: user.uid,\n              createdAt: new Date(),\n              updatedAt: new Date()\n            });\n          }\n        });\n      }\n    });\n  }, []);\n  const value = {};\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, children);\n}\n\n_s2(AuthProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/nisha/Desktop/MovieSearchEngine/movies-project/src/service/authContext.js"],"names":["auth","db","React","useContext","useEffect","onAuthStateChanged","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","AuthContext","createContext","useAuth","AuthProvider","children","user","collection","doc","uid","get","then","exists","set","email","name","displayName","photoURL","createdAt","Date","updatedAt","value"],"mappings":";;;;AACA,SAASA,IAAT,EAAeC,EAAf,QAAyB,aAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SACIC,kBADJ,EAEIC,OAFJ,EAGIC,8BAHJ,EAIIC,0BAJJ,QAKO,eALP;AAOA,MAAMC,WAAW,gBAAGP,KAAK,CAACQ,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAOR,UAAU,CAACM,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEvCT,EAAAA,SAAS,CAAC,MAAM;AACZJ,IAAAA,IAAI,CAACK,kBAAL,CAAwBS,IAAI,IAAI;AAC5B,UAAIA,IAAJ,EAAU;AACNb,QAAAA,EAAE,CAACc,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,IAAI,CAACG,GAAhC,EAAqCC,GAArC,GAA2CC,IAA3C,CAAgDH,GAAG,IAAI;AACnD,cAAI,CAACA,GAAG,CAACI,MAAT,EAAiB;AACbnB,YAAAA,EAAE,CAACc,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,IAAI,CAACG,GAAhC,EAAqCI,GAArC,CAAyC;AACrCC,cAAAA,KAAK,EAAER,IAAI,CAACQ,KADyB;AAErCC,cAAAA,IAAI,EAAET,IAAI,CAACU,WAF0B;AAGrCC,cAAAA,QAAQ,EAAEX,IAAI,CAACW,QAHsB;AAIrCR,cAAAA,GAAG,EAAEH,IAAI,CAACG,GAJ2B;AAKrCS,cAAAA,SAAS,EAAE,IAAIC,IAAJ,EAL0B;AAMrCC,cAAAA,SAAS,EAAE,IAAID,IAAJ;AAN0B,aAAzC;AAQH;AACJ,SAXD;AAYH;AACJ,KAfD;AAgBH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAME,KAAK,GAAG,EAAd;AAGA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,QADL,CADJ;AAKH;;IA7BeD,Y;;KAAAA,Y","sourcesContent":["\r\nimport { auth, db } from \"../firebase\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport {\r\n    onAuthStateChanged,\r\n    signOut,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                db.collection(\"users\").doc(user.uid).get().then(doc => {\r\n                    if (!doc.exists) {\r\n                        db.collection(\"users\").doc(user.uid).set({\r\n                            email: user.email,\r\n                            name: user.displayName,\r\n                            photoURL: user.photoURL,\r\n                            uid: user.uid,\r\n                            createdAt: new Date(),\r\n                            updatedAt: new Date(),\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const value = {\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}